{"version":3,"sources":["../src/main.js"],"names":["Product","a","b","RGVCards","r","g","card","InfiniteCoins","N","A","changes","RoundUpTheMean","Math","ceil","PlacingMarbles","newArr","split","filter","w","i","SomethingOnIt","S","length","Already2018","ymdArr","join","i18n","s","ShiftOnly","count","every","n","map","BreakNumber","result","ii","console","log","maximumDifference","max","apply","min","OddString","BinalyAlchemy","X","L","reduce","floor","coins","B","C","c","sum","conut","cakes","someSums","nums","Array","from","v","toString","p","parseInt","harshadNumber","cardGame","aPoint","bPoint","sort","snakeToy","K","reverse","groupContest","teamA","teamB","unshift"],"mappings":"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","sourcesContent":["function Product(a, b){\n    if (a * b % 2 === 0) {\n        return 'Even'\n    }\n\n    return 'Odd'\n}\nfunction RGVCards(r, g, b) {\n    const card = `${r}${g}${b}`\n\n    if (card % 4 === 0) {\n        return 'YES'\n    }\n\n    return 'NO'\n}\nfunction InfiniteCoins(N, A) {\n   let changes =  N % 500\n   if (changes === 0) {\n       return 'Yes'\n   } else {\n       if (changes > A) {\n        return 'No'\n       }\n       return 'Yes'\n   }\n}\nfunction RoundUpTheMean(a, b) {\n    return Math.ceil((a + b) / 2)\n}\n/* END OF 1 */\n\n\n/* START OF 2 */\nfunction PlacingMarbles(A) {\n    const newArr =  A.split('1')\n    return newArr.filter((w,i) => w===\"\")\n}\nfunction SomethingOnIt(S) {\n    return 700 + (S.split('o').length - 1) * 100\n}\nfunction Already2018(S) {\n    let ymdArr = S.split('/')\n    if (ymdArr[0] === '2017') {\n        ymdArr[0] = '2018'\n    }\n\n    return ymdArr.join('/')\n}\nfunction i18n(s) {\n    return `${s[0]}${s.length-2}${s[s.length-1]}`\n}\n\n/* START OF 3 */\nfunction ShiftOnly(N) {\n    let count = 0\n    while (N.every((n) => (n % 2) === 0)) { // 配列の全ての内容が偶数の間\n        count++\n        N = N.map((n) => n / 2)\n    }\n\n    return count\n}\nfunction BreakNumber(N) {\n    let result = 0\n    for (let i = 1; i <= N; i++) {\n        let count = 0\n        let ii = i\n        while (ii % 2 === 0) {\n            count++\n            ii /= 2 \n        }\n        if (result < count) {\n            result = i\n        }\n    }\n    return console.log(result)\n}\nfunction maximumDifference(N) {\n    return Math.max.apply(null, N) - Math.min.apply(null, N)\n}\nfunction OddString(s) {\n    let result = ''\n    s.split('').map((n, i) => {\n        if (i % 2 !== 0) return\n        return result += n\n    })\n\n    return result\n} \nfunction BinalyAlchemy(X, L) {\n    const changes = X - L.reduce((a, b) => a + b)\n    const min = Math.min.apply(null, L)\n\n    return Math.floor(changes/min) + L.length\n\n}\n\n/* START OF 4 */\nfunction coins(A, B, C, X) {\n    let count = 0\n\n    for (let a = 0; a <= A; ++a) {\n        for (let b = 0; b <= B; ++b) {\n            for (let c = 0; c <= C; ++c) {\n                const sum = (500 * a) + (100 * b) + (50 * c)\n                if (sum === X) {\n                    conut++\n                }\n            }\n        }\n    }\n\n    return count \n}\nfunction cakes(N) {\n    let count = 0\n    for (let a = 0; a <= N/7; a++) {\n        for (let b = 0; b <= N/4; b++) {\n            if (7*a + 4*b === N) {\n                return 'Yes'\n            }\n        }\n    }\n\n    return 'No'\n}\nfunction someSums (N, A, B) {\n    const nums =  Array.from(new Array(N), (v, i) => ++i).filter((i) => {\n        let n = i.toString().split('').reduce((p, c) => p + parseInt(c), 0)\n        return (n >= A && n <= B)\n    })\n\n    return nums.reduce((p, c) => p + c, 0)\n}\nfunction harshadNumber(X) {\n    const sum = X.toString().split('').reduce((p, c) => p + parseInt(c), 0 )\n    if (X % sum === 0) return 'Yes'\n    \n    return 'NO'\n}\nfunction cardGame(N) {\n    let aPoint = 0\n    let bPoint = 0\n\n    N.sort().map((n, i) => {\n        if (i % 2 !== 0) {\n            aPoint += n \n        } else {\n            bPoint += n\n        }\n    })\n\n    return aPoint - bPoint\n}\nfunction snakeToy(K, L) {\n    const newArr = L.sort().reverse()\n    let sum = 0\n    for (let i = 1; i <= K; i++) {\n        sum += L[i-1]\n    }\n\n    return sum\n}\nfunction groupContest(N, L) {\n    let teamA = []\n    let teamB = []\n    L.sort().map((n,i) => {\n        if (i % 2 !== 0) {\n            teamA.unshift(n)\n        } else {\n            teamB.unshift(n)\n        }\n    })\n\n    return teamA[1] + teamB[1]\n}\nconsole.log(groupContest(2, [5, 2, 8, 6, 1, 5]))"],"file":"main.js"}